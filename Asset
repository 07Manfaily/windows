<a href="{{ url_for('projet_details', project='moana') }}">MOANA</a>
@app.route('/projet-details')
def projet_details():
    project = request.args.get('project')  # R√©cup√©rer le param√®tre
    return render_template('projet-details.html', project=project)

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const project = "{{ project }}";  // R√©cup√©rer la valeur envoy√©e par Flask

        if (project) {
            const tab = document.querySelector(`#Data-tab-${project}`);
            const pane = document.querySelector(`#Data${project}-tab-pane`);

            if (tab && pane) {
                tab.classList.add("active");
                tab.setAttribute("aria-selected", "true");
                pane.classList.add("show", "active");
            }
        }
    });
</script>
const lastAgence = useRef(null);
const lastOperationType = useRef(null);

useEffect(() => {
  if (operationType && (lastAgence.current !== agence || lastOperationType.current !== operationType)) {
    if (agence === "Toute les agences") {
      GetCaisseCompareGlobale();
    } else {
      GetCaisseCompare();
    }

    lastAgence.current = agence;
    lastOperationType.current = operationType;
  }
}, [agence, operationType]);
<Box sx={{ height: 400 }}>
  <ReactApexChart
    options={options(
      dataMontant.categories.length > 0 ? dataMontant.categories : [""], // Cat√©gorie vide
      dataMontant.series.length > 0 ? dataMontant.series[0] : { data: [0] }, // Donn√©e vide
      dataMontant.categories.length > 0 ? dataMontant.categories : [""],
      ["#d81159"]
    )}
    series={
      dataMontant.series.length > 0
        ? dataMontant.series
        : [{ name: "Aucune donn√©e", data: [0] }] // Structure correcte pour ApexCharts
    }
    type="bar"
    width="100%"
    height={350}
  />
</Box>

Pourquoi cette correction ?

‚úÖ Dans ApexCharts, series doit √™tre un tableau d'objets avec { name, data }.
‚úÖ Si dataMontant.series est vide, on fournit [{ name: "Aucune donn√©e", data: [0] }], ce qui est valide.
‚úÖ Cela √©vite une erreur lorsque les donn√©es ne sont pas encore disponibles.

üí° Avec ce correctif, ton graphe s'affichera vide mais sans erreur en attendant les vraies donn√©es.




import React from 'react';
import ReactApexChart from 'react-apexcharts';

const EmptyChart = () => {
  const options = {
    chart: {
      id: 'empty-chart',
      animations: {
        enabled: true
      }
    },
    noData: {
      text: 'Aucune donn√©e disponible',
      align: 'center',
      verticalAlign: 'middle',
      offsetX: 0,
      offsetY: 0,
      style: {
        color: '#666',
        fontSize: '16px',
        fontFamily: 'sans-serif'
      }
    },
    // Vous pouvez personnaliser d'autres aspects du graphique ici
    xaxis: {
      type: 'datetime'
    },
    yaxis: {
      labels: {
        formatter: (value) => `${value}`
      }
    }
  };

  // S√©rie vide
  const series = [];

  return (
    <div className="w-full h-96 p-4 bg-white rounded-lg shadow-sm">
      <ReactApexChart
        options={options}
        series={series}
        type="line"
        height="100%"
        width="100%"
      />
    </div>
  );
};

export default EmptyChart;
